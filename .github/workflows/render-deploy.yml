name: Test and Validate for Render

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📦 Checkout Repository
      uses: actions/checkout@v4
    
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: 📋 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: 🧪 Test Bot Syntax
      run: |
        python -c "
        import sys
        sys.path.append('.')
        try:
            import bot
            print('✅ Bot imports erfolgreich!')
        except Exception as e:
            print(f'❌ Import Fehler: {e}')
            sys.exit(1)
        "
    
    - name: 🔍 Validate Environment Variables
      run: |
        python -c "
        import os
        from dotenv import load_dotenv
        load_dotenv()
        
        # Check required variables
        webhook_url = os.getenv('DISCORD_WEBHOOK_URL', 'not_set')
        if 'webhook' not in webhook_url.lower():
            print('⚠️ DISCORD_WEBHOOK_URL sollte gesetzt werden')
        else:
            print('✅ Environment Variables validiert')
        "
    
    - name: 🏥 Test Health Check Routes
      run: |
        python -c "
        import sys
        sys.path.append('.')
        from bot import app
        
        with app.test_client() as client:
            # Test health endpoint
            response = client.get('/health')
            assert response.status_code == 200
            print('✅ Health Check funktioniert')
            
            # Test status endpoint  
            response = client.get('/status')
            assert response.status_code == 200
            print('✅ Status Endpoint funktioniert')
            
            # Test home endpoint
            response = client.get('/')
            assert response.status_code == 200
            print('✅ Home Endpoint funktioniert')
        "
    
    - name: ✅ Deployment Ready
      run: |
        echo "🎉 Alle Tests bestanden!"
        echo "🚀 Ready für Render Deployment!"
        echo ""
        echo "📋 Nächste Schritte:"
        echo "1. Gehe zu https://render.com"
        echo "2. Verbinde GitHub Repository"
        echo "3. Erstelle Web Service"
        echo "4. Setze DISCORD_WEBHOOK_URL Environment Variable"
        echo "5. Deploy! 🎯"

  # Optionaler Job um Render zu triggern (wenn Render Webhooks konfiguriert sind)
  notify-render:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: 🚀 Notify Render of New Deployment
      run: |
        echo "✅ Tests bestanden - Render wird automatisch deployen"
        echo "🔄 Render erkennt Git Push automatisch"
